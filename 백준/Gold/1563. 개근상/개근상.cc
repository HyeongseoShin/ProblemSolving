#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000

int n;

// dp[i][j][k] : i날짜까지 j번 지각 했고, k번 연속 결석했을 때 가능한 출결 정보의 개수
// 개근상 가능한 경우
// dp[n][0][0] : 0번 지각, 0번 결석
// dp[n][0][1] : 0번 지각, 1번 결석
// dp[n][0][2] : 0번 지각, 2번 결석

// dp[n][1][0] : 1번 지각, 0번 결석
// dp[n][1][1] : 1번 지각, 1번 결석
// dp[n][1][2] : 1번 지각, 2번 결석
int dp[1001][2][3];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    dp[1][0][0] = dp[1][1][0] = dp[1][0][1] = 1;

    for(int i = 2; i <= n; i++)
    {
        // 한 번도 지각하지 않은 상태로 오늘 출석하면 연속 결석 횟수 0으로 초기화
        dp[i][0][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % MOD;

        // 한 번도 지각하지 않은 상태로 오늘 결석으로 했다면 이전 [지각][결석일자] 경우의 수에서 업데이트
        dp[i][0][1] = dp[i-1][0][0] % MOD;
        dp[i][0][2] = dp[i-1][0][1] % MOD;


        // 이 떄까지 한 번 지각하지 않은 상태로 오늘 지각한 경우
        // 이 때까지 한 번 지각한 상태로 오늘 출석한 경우
        dp[i][1][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2] + dp[i-1][1][0] + dp[i-1][1][1] + dp[i-1][1][2]) % MOD;

        // 한 번 지각한 상태로 오늘 결석으로 했다면 이전 [지각][결석일자] 경우의 수에서 업데이트
        dp[i][1][1] = dp[i-1][1][0] % MOD;
        dp[i][1][2] = dp[i-1][1][1] % MOD;
    }

    int ans = (dp[n][0][0] + dp[n][0][1] + dp[n][0][2] + dp[n][1][0] + dp[n][1][1] + dp[n][1][2]) % MOD;

    cout << ans << "\n";

    return 0;
}